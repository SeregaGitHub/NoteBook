Adding Default HTTP Request Headers

    If you run the app at this point you will find that the browser pops up a Basic authentication dialogue (for user and password). 
It does this because it sees a 401 reponse from the XHR requests to /user and /resource with a "WWW-Authenticate" header. 
The way to suppress this popup is to suppress the header, which is coming from Spring Security. 
And the way to suppress the reponse header is to send a special, conventional request header "X-Requested-With=XMLHttpRequest". 
It used to be the default in Angular but they took it out in 1.3.0. So hereâ€™s how to set default headers in an Angular XHR request.

First extend the default RequestOptions provided by the Angular HTTP module:

app.module.ts

@Injectable()
export class XhrInterceptor implements HttpInterceptor {

  intercept(req: HttpRequest<any>, next: HttpHandler) {
    const xhr = req.clone({
      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')
    });
    return next.handle(xhr);
  }
}

    The syntax here is boilerplate. The implements property of the Class is its base class, and in addition to the constructor, 
all we really need to do is override the intercept() function which is always called by Angular and can be used to add additional headers.

To install this new RequestOptions factory we need to declare it in the providers of the AppModule:

app.module.ts

@NgModule({
  ...
  providers: [AppService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],
  ...
})
export class AppModule { }

