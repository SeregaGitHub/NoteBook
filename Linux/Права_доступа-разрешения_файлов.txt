                                            Права доступа (разрешения)

Каждый файл и каталог в Linux имеет права доступа, определяющие, кто может что с ними делать. Они делятся на 3 категории:

* Владелец (user) — обычно создатель файла
* Группа (group) — пользователи, объединённые в группу
* Остальные (others) — все прочие

И три типа прав:

* r (read) — право на чтение
* w (write) — право на запись
* x (execute) — право на выполнение (для скриптов и программ)

-------------------------------------------------------------------------------
Пример:
ls -l myscript.sh
-rwxr-xr-- 1 alice devs 234 May 14 12:00 myscript.sh
                  
Расшифровка:

- — обычный файл (если d, значит директория)

rwx — права владельца: читать, писать, запускать

r-x — права группы: читать и запускать

r-- — права остальных: только читать
-------------------------------------------------------------------------------

                                    chmod — изменение прав

Символьный способ:

chmod u+x file.sh — добавляет владельцу право на выполнение
chmod g-w file.txt — запрещает группе запись
chmod o+r file.txt — разрешает всем остальным читать файл

Цифровой способ: Каждая комбинация прав представляется цифрой:
r = 4, w = 2, x = 1

Суммируем права:
chmod 754 file.sh:

7 = rwx — владелец
5 = r-x — группа
4 = r-- — остальные

Пример:

chmod 700 secrets.txt
                  
Разрешает доступ только владельцу (читать, писать, запускать), остальные не имеют прав.

chown — изменение владельца
sudo chown bob file.txt — меняет владельца на bob

sudo chown bob:admins file.txt — меняет владельца и группу

chgrp — изменение группы
chgrp editors file.txt — меняет группу на editors

                                            Дополнительные функции

                                                umask

Определяет, какие права будут у файлов/папок при создании.

umask 022 означает:

Файл: 644 (rw-r--r--)
Папка: 755 (rwxr-xr-x)

Пример:

umask
umask 027
                  
027 запрещает другим пользователям любые права.

                                        chattr и lsattr

chattr +i file.txt — делает файл неизменяемым

lsattr file.txt — показывает текущие атрибуты

Пример:

sudo chattr +i config.conf
                  
Теперь файл нельзя редактировать или удалить, пока не снять +i:

sudo chattr -i config.conf

                  
                                ACL — расширенный контроль доступа

Стандартные права user/group/others не всегда гибкие. ACL позволяет задавать права индивидуальным пользователям.

Примеры:

setfacl -m u:john:rw file.txt
getfacl file.txt

                  
john получает права read и write на file.txt, даже если он не владелец и не в группе.

                        Дополнительные флаги прав: SUID, SGID и sticky bit
                        
SUID (Set User ID)

Программа запускается с правами владельца файла, а не запускающего пользователя.

Пример:

chmod u+s /path/to/file

                  
SGID (Set Group ID)
Похож на SUID, но действует на группу.

Sticky bit
Используется для директорий, например /tmp, чтобы только владелец файла мог его удалить.

Пример:

chmod +t /shared/folder