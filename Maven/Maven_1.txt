<!-- в начале идёт стартовый элемент с указанием на то, какая схема проекта используется -->
<project
    xmlns="<http://maven.apache.org/POM/4.0.0>"
    xmlns:xsi="<http://www.w3.org/2001/XMLSchema-instance>"
    xsi:schemaLocation="<http://maven.apache.org/POM/4.0.0> <http://maven.apache.org/maven-v4_0_0.xsd>"
  >
<!-- версия формата описания pom -->
  <modelVersion>4.0.0</modelVersion>

<!-- любой пакет в мавен имеет свои координаты, группу, идентификатор и версию -->
  <groupId>ru.yandex.practicum</groupId>
  <artifactId>helloWorld</artifactId>
  <version>1.0-SNAPSHOT</version>

<!-- формат упаковки сборки - .jar или .war, или что-то ещё -->
  <packaging>jar</packaging>

<!-- человекочитаемое название пакета -->
  <name>helloWorld</name>

<!-- список зависимостей -->
  <dependencies>

<!-- одна конкретная зависимость с указанием её координат в хранилище -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>

============================================================================================================

  Одно из преимуществ работы с Maven — чёткая структура каталогов проекта.
Стандартно она выглядит так:

src # все файлы проекта
  main # файлы, которые обеспечивают работу программы
    java # исходный код
    resources # дополнительные материалы, например, файлы конфигурации
  test # файлы, которые обеспечивают тестирование
    java # код тестов
    resources # дополнительные материалы для тестирования
target # служебная папка Maven
  classes # пример подпапки
pom.xml # файл с инструкциями


--------------------------------------------------------------------------------------------------------------

                                        Архетип и артефакт

  При добавлении Maven к проекту нужно понимать значение ещё двух ключевых понятий — архетипа и артефакта.
Архетип — это шаблон, который можно использовать в качестве основы для своего проекта.
Основные плюсы использования архетипов — это стандартизация разработки и возможность получить доступ к уже готовым решениям.
Также можно создать собственный архетип.
Артефакт — это достаточно широкое понятие в программировании. Часто артефактами называют всё, что создано в процессе разработки программного обеспечения.
Артефактом может быть любая библиотека, зависимость или плагин.
Артефакт Maven — более узкое понятие, под ним подразумевается файл обычно формата JAR, который появляется при сборке проекта.
У артефакта Maven есть группа настроек Artifact Coordinates (англ. «координаты артефакта»).
К ним относятся groupId, artifactId и version.

- groupId (англ. «идентификатор группы») указывает на уникальный идентификатор организации или группы, которые создали проект.
  GroupId является одним из ключевых идентификаторов проекта и, как правило, основан на полном доменном имени организации.
  К примеру, ru.yandex.practicum.
- artifactId (англ. «идентификатор артефакта») указывает на уникальное имя артефакта, генерируемого этим проектом.
- version (англ. «версия») указывает на версию артефакта.

Идентификаторы и указатель версии будут использоваться в файле pom.xml.

Настройки артефакта <groupId>, <artifactId> и <version> — одни из основных тегов в pom.xml. Его стартовая версия выглядит примерно так:


<project xmlns="<http://maven.apache.org/POM/4.0.0>"
    xmlns:xsi="<http://www.w3.org/2001/XMLSchema-instance>"
    xsi:schemaLocation="<http://maven.apache.org/POM/4.0.0> <http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>my-project</artifactId>
  <version>1.0</version>
</project>
