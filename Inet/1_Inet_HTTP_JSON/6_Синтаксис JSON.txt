												JSON

  Чтобы фронтенд и бэкенд могли понимать друг друга, данные должны передаваться в определённом формате.
Одним из таких форматов является JSON (от англ. JavaScript Object Notation, «синтаксис объекта JavaScript»).


									Синтаксис JSON

JSON поддерживает шесть типов данных. Их аналоги есть в большинстве языков программирования, в том числе и в Java.

    Примитивные типы данных:
        строки: "строка"
        числа: 42
        логические значения: false или true
        отсутствующее значение: null
    Сложные типы данных:
        массивы: [1,2,3,4]
        объекты: { "value": 42 }

В JSON значения примитивных типов не могут использоваться сами по себе. Они обязательно должны входить в состав объекта или массива.

    JSON-объект

Объект в JSON — это набор пар «ключ-значение». Эти пары ещё называются полями объекта. Объект записывается в фигурных скобках.
Между скобками перечисляются поля — через запятую и в произвольном порядке.
Название поля всегда указывается в двойных кавычках и отделяется от значения двоеточием. Строковые значения тоже записываются в двойных кавычках.
Названия полей в объекте не должны повторяться.

{
"имя": "Красавчик",
"возраст": 2,
"цвет": "чёрный",
"вид животного": "собака",
"любимые занятия": ["кушать", "гулять", "лаять"]
}

Фигурные скобки и поля объекта необязательно записывать на отдельных строках.
Обычно данные в формате JSON передаются в максимально сжатом виде, а все пробелы и переносы строк удаляются.
Это позволяет уменьшать размер сообщения.

{"name":"Глафира Харитонова","age":22,"married":true,"children":null,"entertainments":["Танцы","Фанты","Лото"]}

    JSON-массив

Массив в JSON похож на массив в Java. Это упорядоченный набор значений, заключённый в квадратные скобки.
Его элементы отделяются друг от друга запятой. Пример массива из трёх строковых элементов:

["Танцы","Фанты","Лото"]

JSON-объекты и JSON-массивы могут содержать другие объекты и массивы. Например, информацию о пользователе можно организовать так:

Допустим, нужно передать информацию не об одном пользователе, а о нескольких. Для этого можно использовать массив.
Каждый его элемент будет объектом с информацией о конкретном пользователе.
