
BEGIN ISOLATION LEVEL SERIALIZABLE;  -- изменение уровня изоляции

CREATE TABLE transaction_test                  
(
  tr_id       serial       PRIMARY KEY,       
  some_text   varchar(128) NOT NULL,     
  some_number int          NOT NULL              
);  

INSERT INTO transaction_test (some_text, some_number)
VALUES
('text_1', 1),
('text_2', 2),
('text_3', 3);

SAVEPOINT backup;                 -- точка сохранения

INSERT INTO transaction_test (some_text, some_number)
VALUES
('text_4', 4),
('text_5', 5),
('text_6', 6);

SELECT * FROM no_exists_table;    -- 1. селект выдаёт ошибку -> транзакция не завершена !!!

COMMIT;
-----------------------------------------------------------------------------------------------------------------
ROLLBACK;                         -- 3. для завершения транзакции необходимо выполнить команду - ROLLBACK !!!

ROLLBACK TO backup;               -- если хотим закоммитить транзакцию на точке сохранения -> ROLLBACK TO backup; затем COMMIT;

SELECT * FROM some_exists_table;  -- 2. другие операции - невозможны пока не завершится транзакция !!!
=================================================================================================================

    Логика работы ROLLBACK; ROLLBACK TO backup; через "if / else" прописывается в "java" !!!

=================================================================================================================

                    Если работа идёт с изменениями в таблице -> можно выполнить блок кода:

* начиная с BEGIN; но не доходя до COMMIT;
* всё проверить
* если что-то не так -> выполнить ROLLBACK; 
* если всё OK -> выполнить COMMIT;
=================================================================================================================

