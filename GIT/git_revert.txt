
                   REVERT

(Отмена изменений в коммитах путём создания нового)

    fdda - коммит после revert
     -
    54a4 - master HEAD
     -
    1913
     -
    c3ef

- git revert @           -  создаст коммит fdda, в котором
                            будут отменены все изменения 54a4
- git revert 1913        -  revert коммита 1913
- git revert c3ef..54a4  -  revert диапозона коммитов
-------------------------------------------------------------------------
                REVERT коммита слияния

                    72ac
                  -  -
               -    b52d - отмена коммита revert 0сс5
   new      -        -     возврат 38e8
branchName 8071      -
            -       0сс5 - коммит revert
            -        -
            -       38e8 - master HEAD
            -      - -    коммит слияния
            -   -    -
            - -      -
branchName 2c11      -
            -        -
           2702      -
            -        -
               -     -
                  -  -
                     -
                    54a4 - master HEAD
                     -
                    1913
                     -
                    c3ef

    Если в ветке branchName были ошибки:
- git revert 38e8 -m 1            -  отменит изменения 1 (основной) ветки
                                     и создаст - 0сс5, коммит revert
    Потом можно продолжить работу с веткой branchName - 8071
                --------------------------------------------------
    ((Ещё ниже - другой вариант слияния доработанной ветки, после отмены слияния !!!))
                --------------------------------------------------
    Чтобы снова слить ветки:
- git revert 0сс5                 -  отменить коммит отмены, это вернёт
                                     коммит слияния и создаст коммит b52d
                                     с которым уже можно снова сливаться
- git merge branchName --no-edit  -  завершение слияния
                                     после доработки branchName
-----------------------------------------------------------------------------------
                            Другой Вариант

- git rebase --onto master 54a4 branchName
    "Если при слиянии выявлен старый конфликт прошлого слияния (38e8)"
    "И если раньше он был уже решён - его решение можно повторить"
- git rebase --abort
- git config rerere.enabled true
- /opt/local/share/git/contrib/rerere-train.sh --all
  (файл rerere-train.sh может лежать в другой директории)

- git rebase --onto master 54a4 (ещё раз)
- git add
- git rebase --continue
- git checkout master
- git merge --no-ff --no-edit branchName (объединит 8900 и 0сс5)

        very new  8900 - HEAD после: git rebase --continue
      branchName   -
                  fa79
                   -
                  2a18 - после: git rebase --onto master 54a4 (ещё раз)
                   -
                    -
    new    8071      -
branchName  -       0сс5 - master HEAD(?)
            -        -
            -       38e8
            -      - -
            -   -    -
            - -      -
branchName 2c11      -
            -        -
           2702-     -
                 -   -
                   -54a4
---------------------------------------------------------------------------------
                    ЕЩЁ ОДИН ВАРИАНТ

- git checkout branchName
- git rebase 54a4 --no-ff
        "Плтлм обычное слияние c64f и 0сс5"

                            new    8071      -
                        branchName  -       0сс5 - master HEAD
                                    -        -
   копия    c64f                    -       38e8
    new      -                      -      - -
branchName  2f09                    -   -    -
             -                      - -      -
            35d3        branchName 2c11      -
             -                      -        -
             - - - - - -           2702      -
                         - - - -             -
                                 - - - - - -54a4

========================================================================================
                              Отмена коммита слияния

    Другой вариант — отменить коммит слияния. Для этого нужна команда git revert (англ. «вернуть, восстановить»).
Сложность в том, что у коммита слияния два родителя. Поэтому при его отмене нужно явно указать, какая ветка основная.
Для этого нужен ключ -m 1. Он показывает, что содержимое главной ветки нужно сохранить, а все изменения, внесённые слиянием — отменить.
    В качестве аргумента нужно передать либо указать HEAD — если отмена происходит сразу после слияния,
либо краткий хеш коммита слияния — если после слияния было сделано ещё несколько коммитов.

В терминале это будет выглядеть так:

$ git revert -m 1 3f0d8da
[master b1d8379] Revert "Merge branch 'bugfix/wrong-discount'"

В результате отмены коммита слияния в главной ветке появится коммит восстановления. Его можно посмотреть в истории репозитория:

git log # смотрим историю

commit 28547e5f46f998f7ad536ae7b9117df1b9f9f6cf (HEAD -> main) # коммит восстановления
Author: students-yandex <students-yandex@yandex.com>
Date:   Wed Mar 4 04:00:10 2020 +0300

Revert "Merge branch bugfix/wrong-discount"

This reverts commit 3f0d8dad682e05a37591bd1df4735ef209857304, reversing # отменённый коммит
changes made to 2bb5af63a96e649089dfb61d09b3c2f96908fdba. # отсюда взяты изменения

Новый коммит имеет точно такое же содержимое как будто слияние никогда не выполнялось.

Единственная проблема в том, что коммиты второй ветки (у нас в примере это bugfix/wrong-discount) остаются в истории.
Из-за этого при новой попытке слияния веток Git сообщит, что «мержить нечего».

git merge bugfix/wrong-discount
Already up to date.

Если же вы продолжите работу в дополнительной ветке, то при слиянии в main попадут только те изменения, которые были сделаны после отмены слияния.

Самый простой способ выйти из такой ситуации — создать новую ветку из той, слияние с которой было отменено.
В новой ветке нужно сделать коммит, затем перейти в main и выполнить новое слияние:

git branch ## Посмотрим список веток и в какой ветке мы сейчас находимся
* bugfix/wrong-discount
main

git checkout -b bugfix/merge-branches

## После внесения изменений в код

git add -A && git commit -m "Сделать слияние с main" # Коммитим в ветке bugfix/merge-branches

git checkout main ## Переходим в ветку main

git merge bugfix/merge-branches
