
* %s 	String
* %d 	целое число: int, long, …
* %f 	вещественное число: float, double
* %b 	boolean
* %c 	char
* %t 	Date
* %% 	Символ %
* (Если %S и т.п.- аналог toApperCase)
--------------------------------------------
%[argument_index$][flags][width][.precision]conversion

- % — специальный символ, обозначающий начало инструкций форматирования.
- [argument_index$] — целое десятичное число, указывающее позицию аргумента
   в списке аргументов. Ссылка на первый аргумент "1$",
   ссылка на второй аргумент "2$" и т.д. Не является обязательной частью инструкции.
   Если позиция не задана, то аргументы должны находиться в том же порядке,
   что и ссылки на них в строке форматирования.
- [flags] — специальные символы для форматирования. Например, флаг "+" означает,
   что числовое значение должно включать знак +,
   флаг "-" означает выравнивание результата по левому краю,
   флаг «,» устанавливает разделитель тысяч у целых чисел.
   Не является обязательной частью инструкции.
- [width] — положительное целое десятичное число,
   которое определяет минимальное количество символов, которые будут выведены.
   Не является обязательной частью инструкции.
- [.precision] — не отрицательное целое десятичное число с точкойперед ним.
   Обычно используется для ограничения количества символов.
   Специфика поведения зависит от вида преобразования.
   Не является обязательной частью инструкции.
- conversion — это символ, указывающий, как аргумент должен быть отформатирован.
   Например d для целых чисел, s для строк, f для чисел с плавающей точкой.
   Является обязательной частью инструкции.

--------------------------------------------
 * int n = 1234;
- System.out.printf("%d", n);         - 1234
- System.out.printf("%,d", n);        - 1 234
- System.out.printf("%7d", n);        - ___1234
- System.out.printf("%07d", n);       - 0001234
- System.out.printf("%+4d", n);       - +1234
- System.out.printf("%+07d", n);      - +001234
- System.out.printf("%-7d", n);       - 1234___
 * double d = 1.123456789;
- System.out.printf("%f", d);         - 1,123457 (6 после ,)
  (7, а не 6 !!! - сокращение)
- System.out.printf("%10f", d);       - __1.123457
- System.out.printf("%010f", d);      - 001.123457
- System.out.printf("%+010f", d);     - +01.123457
- System.out.printf("%.8f", d);       - 1,12345679
- System.out.printf("%8.3f", d);      - ___1,123
- System.out.printf("%-8.3f", d);     - 1,123___
  * String str = "Hello";
- System.out.printf("%s%n", str);     - Hello
- System.out.printf("%10s%n", str);   - _____Hello
- System.out.printf("%-10s%n", str);  - Hello_____
- System.out.printf("%.3s%n", str);   - Hel
- System.out.printf("%8.3s%n", str);  - _____Hel
- System.out.printf("%-10s", str);    // Hello_____
- System.out.printf("%1.12s", str);   // Выведет не менее одного символа и не более 12
---------------------------------------------------
    import java.util.Locale;

- System.out.printf(Locale.ENGLISH,"%,d%n", 1000000 );
  // 1,000,000
- System.out.printf(Locale.GERMAN,"%,d%n", 1000000 );
  // 1.000.000
- System.out.printf(Locale.FRANCE,"%,d%n", 1000000 );
  // 1 000 000

- System.out.printf(Locale.ENGLISH,"%.2f%n", 9.87 );
  //9.87
- System.out.printf(Locale.FRANCE,"%.2f%n", 9.87 );
  //9,87
-----------------------------------------------------
                  String.format
    сохраняет строку для дальнейшего использования

* String s = String.format("Курс валют:
%-4s%-8.4f  %-4s%-8.4f","USD", 58.4643, "EUR", 63.3695);

*                 ПРИМЕР
System.out.printf("%-5s%-11s%-25s%-11s%n","Код","За единиц","Валюты","Рублей РФ");
System.out.println("-----------------------------------------------------");
System.out.printf("%-5s%-11d%-25s%-11.4f%n","AUD",1,"Австралийский доллар",44.9883);
System.out.printf("%-5s%-11d%-25s%-11.4f%n","GBP",1,"Фунт стерлингов",86.8429);
System.out.printf("%-5s%-11d%-25s%-11.4f%n","BYR",10000,"Белорусский рубль",39.7716);
System.out.printf("%-5s%-11d%-25s%-11.4f%n","DKK",10,"Датская крона",84.9192);
System.out.printf("%-5s%-11d%-25s%-11.4f%n","USD",1,"Доллар США",58.4643);
System.out.printf("%-5s%-11d%-25s%-11.4f%n","EUR",1,"Евро",63.3695);
System.out.printf("%-5s%-11d%-25s%-11.4f%n","KZT",100,"Казахский тенге",31.4654);

Код  За единиц  Валюты                   Рублей РФ
-----------------------------------------------------
AUD  1          Австралийский доллар     44,9883
GBP  1          Фунт стерлингов          86,8429
BYR  10000      Белорусский рубль        39,7716
DKK  10         Датская крона            84,9192
USD  1          Доллар США               58,4643
EUR  1          Евро                     63,3695
KZT  100        Казахский тенге          31,4654
