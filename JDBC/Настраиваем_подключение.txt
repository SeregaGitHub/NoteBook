
<dependency>                                          // основные зависимости Spring JDBC и класс автоконфигурации для Spring Boot.
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-data-jdbc</artifactId>
</dependency>


<dependency>                                         // установить драйвер — тоже с помощью зависимости. Добавьте зависимость org.postgresql
    <groupId>org.postgresql</groupId>                // обычно в описании к драйверу указывается конкретный класс,
    <artifactId>postgresql</artifactId>              // который будет отвечать за подключение к JDBC. В данном случае это org.postgresql.Driver.
    <version>42.3.3</version>
</dependency>

=========================================================================================================================================================

  IDEA -> file -> settinngs -> plugins -> marketplace -> database navigator -> install         (плагин для работы с БД (Dan Ciosa))

=========================================================================================================================================================

                                                Настраиваем подключение

  Пакет-стартер spring-boot-starter-data-jdbc позволяет настраивать подключение к базе данных через файл application.properties.
Для этого нужно задать в файле правильные параметры доступа.
Описать адрес и параметры подключения к БД помогает URL. URL для подготовленной вами базы cats будет выглядеть так:

jdbc:postgresql://127.0.0.1:5432/cats

Разберём каждый элемент.

-  Схема. Указывает протокол подключения к ресурсу. В данном случае это JDBC (по аналогии с HTTP).
-  Суб-схема. Указывает тип базы данных. В данном случае это PostgreSQL.
-  Символы // отмечают начало адреса ресурса.
-  Хост (127.0.0.1) и отделённый от него двоеточием порт (5432) *сервера базы данных.
   Хост может быть записан в виде IP-адреса или доменного имени (например, test.cats.org, localhost и так далее).
   Порт зависит от выбранной базы данных и задаётся её администратором. Значение по умолчанию для PostgreSQL — 5432.
-  Адрес базы данных, который соответствует её названию.

  В конце URL для настройки JDBC могут присутствовать опции подключения. Они указываются после знака вопроса.
Например: jdbc:postgresql://127.0.0.1:5432/cats?encoding=utf8.
Параметр encoding=utf8 говорит о том, что данные базы хранятся и передаются в кодировке UTF-8.
Обо всех параметрах подключения вы можете прочитать в документации.
https://jdbc.postgresql.org/documentation/use/#connecting-to-the-database

  Теперь можно добавить остальные параметры доступа и собрать файл настроек application.properties.
Каждая строка в нём должна быть записана в формате параметр=значение:

-  строка spring.datasource.url=jdbc:postgresql://localhost:5432/cats будет содержать URL для подключения;
-  spring.datasource.username=kitty — логин для доступа к БД;
-  spring.datasource.password=purrrrrr — пароль (обязательно нужен сложный);
-  spring.datasource.driver-class-name=org.postgresql.Driver — название нужного класса для драйвера.

В итоге файл application.properties получится таким:

spring.datasource.url=jdbc:postgresql://localhost:5432/cats
spring.datasource.username=kitty
spring.datasource.password=purrrrrr
spring.datasource.driver-class-name=org.postgresql.Driver

=================================================================================================================================

  Проверьте подключение с помощью вызова jdbcTemplate.execute(”SELECT 1;”).
Это самый распространённый способ проверки подключения к БД и её работоспособности
