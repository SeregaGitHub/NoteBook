
                Интерактивный REBASE

        - git rebase -i master
(Редактирование коммитов ветки branchName , перед перебазированием в master)
        - git rebase -i @~3
(Редактирование трёх коммитов ветки branchName {44bf, 7a43, 55f4})

---------------------------------------------------------------------------------------------
                                    NANO

Ctrl + O, Enter, Ctrl + X, Y, Enter
---------------------------------------------------------------------------------------------

   HEAD
branchName  -  44bf (исправление опечаток)
                -
               7a43 (коммит)
                -
               55f4 (апгрэйд функции method)
                -
               3265 (плохие сообщения коммитов)
                -
               b450- (функция method)
                       -

                             -                    ---- master
                                    -              -
                                         -    -   ____
                                                   -
                                                  ----
    Вывод git:

pick b450- (функция method)            -  первый коммит
pick 3265 (плохие сообщения коммитов)
pick 55f4 (апгрэйд функции method)
pick 7a43 (коммит)
pick 44bf (исправление опечаток)       -  последний коммит

Если удалить строку (pick b450)  - этот коммит скопирован НЕ БУДЕТ
Если поменять строки местами     - порядок копирования изменится

p, pick   =  копирование коммита
r, reword =  копирование коммита, с изменением коментариев
             (reword pick b450- (функция method))
             (функция method - сразу менять не нужно, потом в редакторе)
e, edit   =  копирование коммита, с возможностью его редактирования
             git копирует коммит и останавливается, дальше:

             git commit --continue  -  продолжить

             git commit --amend     -  внести изменения
             git show
             (Если разбить на два коммита)
             git reset @~
             git add firstCommit
             git commit -m '-"-' firstCommit
             git add secondCommit
             git commit -m '-"-' secondCommit

             git rebase --edit-to do(to do - слитно)  -  (вернёт к списку коммитов)
                       ИЛИ
             git commit --continue  -  продолжить

s, squash =  слияние с предыдущем коммитом (не может идти перед первым коммитом)
f, fixup  =  как squash, но без коментариев этого коммита
x, exec   =  добавление в этот список произвольных команд
             (например - тестов)
d, drop   =  не копировать коммит


        Если нужно исправить коммит посередине: ???!!!

               0008 - появится новый коммит !!!
   HEAD         -
 branchName  - 55f4 (апгрэйд функции method)
                -
               3265 (плохие сообщения коммитов)
                -
               b450- (функция method)

- git checkout 3265 fileName  -  достанет коммит для изменений
                                 (переведёт в индекс и раб дир.)
          Исправляем коммит...
- git commit -a --fixup=3265
                        ИЛИ
                        @~
          Появится новый коммит (fixup!) 0008
- git rebase -i --autosquash
          После rebase коммит 0008 встанет на место 3265

            96482e7   4
            e9fd6bd   3
