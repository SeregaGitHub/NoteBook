Как в консоли с spring отобразить русский язык?

Проблему решил добавлением в pom <configuration>   <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <executable>true</executable>
          <jvmArguments>-Dfile.encoding=UTF8</jvmArguments>
        </configuration>
      </plugin>
    </plugins>
  </build>

========================================================================

<parent>
  <groupId>org.springframework.boot</groupId>
  <artifactId>spring-boot-starter-parent</artifactId>
  <version>2.6.1</version>
  <relativePath/> <!-- lookup parent from repository -->
</parent>

========================================================================

<dependency>
  <groupId>org.springframework.boot</groupId>
  <artifactId>spring-boot-starter-test</artifactId>          // Этот стартер содержит в себе зависимости: junit_4 и junit_5
  <scope>test</scope>
  <exclusions>                                               // Исключение !!!
    <exclusion>
      <groupId>org.junit.vintage</groupId>                   // Исключение зависимости от junit_4
      <artifactId>junit-vintage-engine</artifactId>
    </exclusion>
  </exclusions>
</dependency>

========================================================================

<properties>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  <maven.compiler.source>11</maven.compiler.source>
  <maven.compiler.target>11</maven.compiler.target>
  <mapstruct.version>1.4.2.Final</mapstruct.version>  // Если версия зависимости необходимо указать в нескольких местах
</properties>


<dependency>
  <groupId>org.mapstruct</groupId>
  <artifactId>mapstruct</artifactId>
  <version>${mapstruct.version}</version>            // Например: в <dependency>
</dependency>

<plugins>
  <plugin>
....................................
  <version>${mapstruct.version}</version>            // И в <plugin>
....................................
  </plugin>
</plugins>
========================================================================
                                                     // Lombok
<dependency>
    <groupId>org.projectlombok</groupId>
    <artifactId>lombok</artifactId>
    <version>1.18.20</version>
    <scope>provided</scope>
</dependency>

========================================================================
                                                       // Validation
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-validation</artifactId>
</dependency>

========================================================================

<dependency>                                          // Logger (В - spring-boot-starter-web: он уже есть !!!)
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-logging</artifactId>
</dependency>

========================================================================
                                                                                                               @JsonProperty("user")
<dependency>                                          // Преобразование Entity в DTO с помощью ModelMapper     UserDto userDto;
    <groupId>org.modelmapper</groupId>
    <artifactId>modelmapper</artifactId>                                                                       @Autowired
    <version>2.3.9</version>                                                                                   private ModelMapper modelMapper;
</dependency>
                                                                                                               return modelMapper.map(user, UserDto.class);
========================================================================

                            H2 со Spring Boot

<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-data-jpa</artifactId>
</dependency>

<dependency>
    <groupId>com.h2database</groupId>
    <artifactId>h2</artifactId>
    <scope>runtime</scope>
</dependency>


application.properties

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

                  Пример

spring.sql.init.mode=always
# в jdbc-url укажите, что данные нужно сохранять в файл
spring.datasource.url=jdbc:h2:file:./db/filmorate
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

                  Для создания базы ЗАПУСТИТЬ проект !!!

========================================================================
========================================================================

                                        Чистый Spring



<dependencies>                                             -- Tomcat
    <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-core</artifactId>
        <version>9.0.56</version>
    </dependency>
</dependencies>

<dependency>                                               -- Для работы с DispacherServlet и контроллерами
    <groupId>org.springframework</groupId>
    <artifactId>spring-webmvc</artifactId>
    <version>5.3.15</version>
</dependency>

<dependency>                                               -- Jackson
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.13.3</version>
</dependency>

<dependency>                                               -- slf4j (logback)
    <groupId>ch.qos.logback</groupId>
    <artifactId>logback-classic</artifactId>
    <version>1.2.11</version>
</dependency>
