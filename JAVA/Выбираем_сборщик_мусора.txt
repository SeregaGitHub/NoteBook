                                                Выбираем сборщик мусора

Выбор будет зависеть от задач, которые вам нужно решить во время работы над программой:


-    Если приложение не предъявляет требований ко времени задержки, предоставьте выбор сборщика мусора самой JVM. 
   В большинстве случаев настройки по умолчанию отлично работают. Чтобы повысить производительность программы, достаточно увеличить размер кучи.

-    Если в приложении небольшой набор данных и оно работает на одном процессоре без требований ко времени задержки, вам подойдёт последовательный сборщик.

-    Если пиковая производительность приложения в приоритете, а требований ко времени задержки нет, следует остановиться на параллельном сборщике.

-    Если время отклика приложения важнее, чем общая пропускная способность, а паузы при сборке мусора должны быть короче секунды, то ваш выбор — G1.

-    Если в приоритете время отклика и в работе задействована куча большого размера, советуем выбрать ZGC.