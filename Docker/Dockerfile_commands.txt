
                                      Dockerfile  -  название без расширения !!!

                          Все команды (технически) можно записывать в призвольном порядке


# some_text                             - комментарии
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* FROM                                  -  определяет базовый образ, на основе которого создаётся локальный образ

FROM amazoncorretto:11-alpine-jdk       -  скачает jdk-11
FROM openjdk:17                         -  скачает jdk-17
FROM ubuntu                             -  скачает ubuntu
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* RUN                                   -  определяет команды, выполняемые в командной оболочки внутри образа (при создании контейнера)

RUN apt-get update                      -  запустит команду на обновление пакетов
RUN apt-get install -y some_programm    -  запустит команду на установку программы
                                           (-y  -  подавляет запрос на согласие установки программы, это ОБЯЗАТЕЛЬНО НЕОБХОДИМО !!!)
RUN javac Main.java                     -  запустит файл Main.java
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
=====================================================================================================================================================================
* CMD                                   -  определяет команды, выполняемые в командной оболочки внутри образа (при запуске контейнера)

CMD ["java", "Main"]                    -  запустит команду: java Main
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ENTRYPOINT                            -  выполнение консольных команд, которые выполнятся внутри контейнера после его запуска

ENTRYPOINT ["java","-jar","/app.jar"]   -  после запуска контейнера откроет терминал и запустит: java -jar app.jar (если файл там есть !!!)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                        Различия между ENTRYPOINT и CMD

-    Назначение: ENTRYPOINT используется для определения основной цели контейнера,
   в то время как CMD обеспечивает поведение по умолчанию, которое может быть переопределено.
-    Переопределение: При запуске контейнера вы можете легко переопределить инструкцию CMD,
   предоставив дополнительные аргументы командной строки, в то время как инструкцию ENTRYPOINT нельзя переопределить,
   если она явно не указана с помощью флага -entrypoint.
-    Взаимодействие: Если в Dockerfile указаны и ENTRYPOINT, и CMD,
   инструкция CMD предоставляет аргументы по умолчанию для инструкции ENTRYPOIN

   FROM ubuntu:latest
   ENTRYPOINT ["/bin/ping"]             -  ENTRYPOINT указывает, что контейнер должен выполнить команду ping
   CMD ["localhost"]                    -  CMD предоставляет аргумент по умолчанию “localhost”
=====================================================================================================================================================================
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* COPY                                  -  копирует файлы и директории из указанной локальной директории в директорию контейнера

COPY target/*.jar app.jar               -  скопирует файлы из локального компа папки target в образ в корневую папку с именем файла app.jar
ENTRYPOINT ["java","-jar","/app.jar"]      затем можно будет запустить этот файл с помощью ENTRYPOINT
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ADD                                   -  делает всё то же, что и инструкция COPY. Но ещё может распаковывать локальные .tar файлы и может загружать файлы по URL
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* WORKDIR                               -  создание рабочей директории в образе; в этой папке находятся все файлы, которые надо будет выполнить при создании образа

WORKDIR /some_name                      -  имя папки
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* EXPOSE                                -  прописывает порт образа

EXPOSE 8001                             -  при запуске контейнера нужно указать -p some_port:8001 image_name
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ENV                                   -  создаёт переменную окружения (удобна для обозначения констант)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ARG                                   -  определяет переменную для передачи Docker’у во время сборки
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* VOLUME                                -  создаёт точку подключения директории для добавления и хранения постоянных данных.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MAINTEINER                            -  добавляет информацию о создателе образа

MAINTEINER some_name <some_email>       -  пример...
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

* LABEL                                 -  добавляет метаданные для образа. Хорошее место для размещения информации об авторе;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
