
    Нормальная форма (НФ) - свойство отношения, характеризующее его с точки зрения избыточности.

    Нормализация - процесс минимизации избыточности отношений (приведение к НФ).
------------------------------------------------------------------------------------------------------
Существует 5 основных нормальных форм базы данных:


    Первая нормальная форма (1NF)
    Вторая нормальная форма (2NF)
    Третья нормальная форма (3NF)
    Четвертая нормальная форма (4NF)
    Пятая нормальная форма (5NF)

Однако выделяют еще дополнительные нормальные формы:

    Ненормализованная форма или нулевая нормальная форма (UNF)
    Нормальная форма Бойса-Кодда (BCNF)
    Доменно-ключевая нормальная форма (DKNF)
    Шестая нормальная форма (6NF)

  Если объединить оба этих списка и упорядочить нормальные формы от менее нормализованной до самой нормализованной,
т.е. начиная с формы, при которой база данных по своей сути не является нормализованной,
и заканчивая самой строгой нормальной формой, то мы получим следующий перечень:

        Ненормализованная форма или нулевая нормальная форма (UNF)
        Первая нормальная форма (1NF)
        Вторая нормальная форма (2NF)
        Третья нормальная форма (3NF)
        Нормальная форма Бойса-Кодда (BCNF)
        Четвертая нормальная форма (4NF)
        Пятая нормальная форма (5NF)
        Доменно-ключевая нормальная форма (DKNF)
        Шестая нормальная форма (6NF)

База данных считается нормализованной, если она находится как минимум в третьей нормальной форме (3NF).
------------------------------------------------------------------------------------------------------
                               1 НФ

- Нет строк дубликатов.
- Все атрибуты простых типов данных (нет списков, множеств и т.п.).
- Все значения скалярны (одно значение в поле).
- В столбце хранятся данные одного типа (???)

                               2 НФ

- Таблица удовлетворяет 1 НФ.
- Есть первичный ключ.
- Все поля должны описывать первичный ключ целиком, а не лишь его часть (В идеале: отсутствие композитных ключей).
                                                    (все неключевые столбцы должны зависить от полного ключа)
                                                    (в таблице не должно быть данных, которые можно получить , зная только половину ключа)

                               3 НФ

- Таблица удовлетворяет 2 НФ.
- Все атрибуты зависят только от первичного ключа (нет данных, которые не относятся к PK)
                                                  (нет неключевых столбцов, которые зависят от других неключевых столбцов)
------------------------------------------------------------------------------------------------------

    Денормализация БД возможна ТОЛЬКО обоснованно, например если она приводит к ускорению селектов.

======================================================================================================
- Представление предметной области (п/о).
- Логическое проектирование (логические связи между объектами п/о)

  Проблемы плохого проектирования:
                                  - возможность записи невалидных данных
                                  - возможность потер информации (нет нужных связей)
                                  - отсутствие необходимой информации (забыто то что нужно)
-------------------------------------------------------------------------------------------------------
                           Стадии проектирования БД

- Анализ требования п/о:
                        - Составление USE CASES (сценарии использования БД)
                        - Аналитический процесс с участием stakeholders (владельцев, экспертов домена)
                        - Концептуальная схема БД (смысловая сеть взаимосвязей)

- Логическое моделирование данных п/о:
                                       - Детализация концептуальноймодели БД
                                       - Описание всех ключей
                                       - Определение всех типов данных
                                       - Описание логических ограничений
                                       - Нормализация отношений до Нормальной формы

- Физическое проетирование и нормализация:
                                          - Выбор конкретной СУБД
                                          - Определение типов данных
                                          - Определение индексов
                                          - Определяются представления (views)
                                          - Определяются ограничения на доступ (security)
                                          - Определение code style

    После строятся ER Diagrams - визуализация схемы БД
-------------------------------------------------------------------------------------------------------
                        Проектирование

- Таблица - это объект, событие, абстракция
- Колонка - это поле объекта
- Строка  - это совокупность полей (создание одного нового объекта)
- Значения в каждом поле по отдельности не должны содержать не валидных данных
- Значения в совокупности полей должны быть непротиворечивы
  (Если одно поле зависит от другого, данные не должны противоречить)

                         Что плохо

- Игнорирование нормализации - ведёт к избыточности данных
- Отсутствие code style
- Одна таблица для разных по смыслу данных
- Отсутствие отслеживания изменений п/о

- Присутствие полей содержащих более одной логической части (full_name)
- Присутствие полей содержащих более одного заначения (массив когда не надо)
- Вычислимое поле (таблица должна только хранить данные)
- Неправильно выбранные первичные ключи
- Композитные первичные ключи (которые строятся более чем по одной колонке)
- В идеале: кроме сурогатного ключа должен быть натуральный
