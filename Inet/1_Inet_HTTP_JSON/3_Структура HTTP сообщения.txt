
                                                        Стартовая строка

  Стартовая строка (англ. start-line) начинает HTTP-сообщение и передаёт его суть.
В стартовой строке запроса используются методы (англ. methods). Они описывают действие, которое сервер должен выполнить с запрашиваемым ресурсом.
В стартовой строке ответа клиенту возвращается код ответа (англ. status code). По нему можно определить, обработан ли запрос успешно или возникла проблема.
Также в стартовой строке и запроса, и ответа указывается версия протокола HTTP. HTTP/1.1 говорит о том, что используется протокол HTTP с версией 1.1.

                                                          HTTP-методы
Основные методы, применяемые в HTTP-запросах:

    POST

Используется для создания на сервере нового ресурса. Например, если нужно добавить нового пользователя в базу сайта,
пользовательские данные будут передаваться в HTTP-сообщении вместе с POST-запросом. Но если такой пользователь уже существует, то сервер вернёт ошибку.

    GET

Используется для получения ресурса. Например, чтобы получить информацию о созданном пользователе. В ответ на GET-запрос север вернёт пользовательские данные.

    PUT

Используется, как и POST, для передачи данных серверу. Разница в том, что PUT-запрос заменяет существующие данные или при их отсутствии создаёт новый ресурс.
Например, если с PUT-запросом передать данные об уже созданном пользователе, то информация на сервере будет обновлена.
Если же такого пользователя на сервере нет, то он будет добавлен.

    PATCH

Используется для частичного обновления данных ресурса. Например, чтобы изменить только телефон или адрес существующего пользователя.

    DELETE

Используется для удаления ресурса. Например, информации о пользователе.

    OPTIONS 

Используется для получения параметров HTTP-соединения и другой служебной информации;

    HEAD

Используется для получения заголовков ответа; это аналог метода GET, только без тела ответа;

    TRACE

Используется для диагностики и получения информации о том, какую информацию промежуточные серверы добавляют или изменяют в запросе.

                                                        Код ответа

  Код ответа состоит из трёхзначного числа и названия. Таких кодов много и их необязательно знать все, но важно понимать, к какой категории относится тот или иной код.
В этом поможет его первая цифра.

Коды успеха — числа, начинающиеся с двойки, то есть с 200 по 299. Они сообщают, что запрос был понят и успешно обработан. Самые часто используемые коды из этой категории:

Код	        Название	               Описание
200	          OK	               Запрос успешно обработан, и результат возвращён в теле ответа.
201	        Created	             На сервере были успешно созданы один или несколько новых ресурсов.
204	       No content	           Запрос успешно обработан и нет никаких данных для возврата. Тело ответа проверять не нужно: оно обязательно будет пустым.

  Коды клиентских ошибок — числа, начинающиеся с четвёрки, то есть с 400 по 499. Они указывают,
что запрос был сформулирован клиентом некорректно, например, содержит неверные данные или не может быть выполнен.
Чаще всего можно встретить следующие коды из этой категории:

Код	        Название	               Описание
400	       Bad Request	         Сервер не понимает запрос или пытается его обработать, но не может выполнить из-за того, что какой-то его аспект неверен.
401	      Unauthorized	         Для выполнения запроса нужна аутентификация, но вместе с запросом не были переданы авторизационные данные.
404	        Not found	           Сервер не может найти запрашиваемый ресурс.

  Коды серверных ошибок — числа, начинающиеся с пятёрки, то есть с 500 по 599.
Если такое число встретилось в ответе, это значит, что сервер не смог обработать запрос в связи с какими-то внутренними проблемами.
Самые распространённые коды из этой категории:

Код	       Название	                Описание
500	   Internal Server Error	    У сервера возникла проблема, с которой он не справился, а потому произошёл сбой обработки запроса.
501	   Not Implemented	          Серверу неизвестен HTTP-метод, использованный в запросе, поэтому запрос невозможно обработать.
503	   Service Unavailable	      Сервер не может сейчас обработать запрос, поскольку сильно загружен, отключён или перезагружается.

  В стартовой строке ответа из нашего примера указан код успеха — 200

====================================================================================================================================================================

                                    Заголовки
  Стартовая строка HTTP-сообщения содержит ограниченное количество элементов. Их недостаточно для передачи всей служебной информации.
Дополнительную информацию передают заголовки (англ. headers). Каждый заголовок записывается на отдельной строке и состоит
из названия и отделённого от него двоеточием значения. Например:

    Accept

  Указывает серверу список типов данных, которые клиент может от него принять и корректно обработать.
Значение */* говорит о том, что HTTP-клиент готов принять данные любого типа.
В качестве значения могут быть также указаны, например, text/html (клиент ожидает данные в формате HTML),
image/png (ожидается изображение в формате PNG) и другие форматы. Заголовок используется только в запросах.

    Host

  Указывает адрес сервера, которому нужно отправить запрос, например, info.cern.ch. Заголовок встречается только в запросах.

    Content-Length

  Указывает размер тела сообщения в байтах. Например, значение 2217 определяет, что всё содержимое веб-страницы занимает 2217 байт.
Заголовок используется как в запросах, так и в ответах.

    Content-Type

  Указывает тип передаваемых данных. Например, значение text/html сообщает, что данные, которые возвращает сервер, имеют текстовый тип и содержат HTML-код.
С помощью этого заголовка клиент или сервер выбирают правильный способ интерпретации поступающей информации.
Заголовок встречается как в запросах, так и в ответах.

====================================================================================================================================================================

                                      Тело

  Иногда вместе с запросом или ответом необходимо передать какие-либо данные.
Например, содержимое запрошенной веб-страницы или текст сообщения для размещения в социальной сети.
Такие данные помещаются в тело (англ. body) HTTP-сообщения. Оно следует за стартовой строкой и заголовками и отделяется от них пустой строкой.
