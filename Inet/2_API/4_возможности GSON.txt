
                                  GSON - –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
  –£ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ GSON –µ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–∞–∑–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –í —ç—Ç–æ–º —É—Ä–æ–∫–µ —Ä–µ—á—å –ø–æ–π–¥—ë—Ç –æ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∏–∑ –Ω–∏—Ö.
–ù–∞—á–Ω—ë–º —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ Gson. –ï–≥–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç,
–∫–æ–≥–¥–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
–¢–∞–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–æ–≥–æ –∏ –Ω–µ –≤—Å–µ –æ–Ω–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã. –ü–µ—Ä–µ—á–∏—Å–ª—è—Ç—å –∏—Ö –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –º–µ—Ç–æ–¥ –∏–ª–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–ª–æ–∂–Ω–æ.
–ü–æ—ç—Ç–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —É–¥–æ–±–Ω–æ–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –¥—Ä—É–≥–∏—Ö –∫–ª–∞—Å—Å–æ–≤.
–≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Ç–∞–∫ –∏ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ‚Äî GsonBuilder(builder ‚Äî –∞–Ω–≥–ª. ¬´—Å—Ç—Ä–æ–∏—Ç–µ–ª—å¬ª).

    GsonBuilder gsonBuilder = new GsonBuilder();

    // —Ç—É—Ç –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –≤—ã–∑—ã–≤–∞—è —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã —É –æ–±—ä–µ–∫—Ç–∞ gsonBuilder

    Gson gson = gsonBuilder.create();

  –ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ GSON:

- prettyPrinting

  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ prettyPrinting (–æ—Ç –∞–Ω–≥–ª. ¬´–∫—Ä–∞—Å–∏–≤–∞—è –ø–µ—á–∞—Ç—å¬ª) –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ JSON-–æ–±—ä–µ–∫—Ç–∞ ‚Äî –≤ –∫–æ—Ä–æ—Ç–∫–æ–º –≤–∏–¥–µ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –≤ –¥–ª–∏–Ω–Ω–æ–º, –Ω–æ –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–º –¥–ª—è —á—Ç–µ–Ω–∏—è.
–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ prettyPrinting –≤—ã–∫–ª—é—á–µ–Ω–∞ –∏ GSON –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ—Ä–æ—Ç–∫—É—é –≤–µ—Ä—Å–∏—é JSON ‚Äî –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫ –∏ –æ—Ç—Å—Ç—É–ø–æ–≤. –¢–∞–∫–æ–π JSON –Ω–µ—É–¥–æ–±–Ω–æ —á–∏—Ç–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É.

{"photoUrl":"https://new-social-network.site/images/928476864.jpg","publicationDate":{"year":2020,"month":12,"day":25},"userId":97748,"description":"–ö–ª–∞—Å—Å–Ω–æ–µ —Ñ–æ—Ç–æ!","likesQuantity":753}

  –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω–æ –Ω–µ—Å–ª—É—á–∞–π–Ω–æ. –ö–æ—Ä–æ—Ç–∫–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ–Ω—å—à–µ –º–µ—Å—Ç–∞ –≤ –ø–∞–º—è—Ç–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, —Å–æ–∫—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö,
–ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –ø–æ —Å–µ—Ç–∏, –∏ —É—Å–∫–æ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º. –¢–∞–∫–∞—è —ç–∫–æ–Ω–æ–º–∏—è –æ—Å–æ–±–µ–Ω–Ω–æ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–∞,
–µ—Å–ª–∏ —Ä–µ—á—å –∏–¥—ë—Ç –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Ç—ã—Å—è—á–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.

    –í–∫–ª—é—á–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É prettyPrinting.

  GsonBuilder gsonBuilder = new GsonBuilder();
  gsonBuilder.setPrettyPrinting();
  Gson gson = gsonBuilder.create();

  JSON —Å—Ç–∞–Ω–µ—Ç –±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–º –¥–ª—è —á—Ç–µ–Ω–∏—è.

{
  "photoUrl": "https://new-social-network.site/images/928476864.jpg",
  "publicationDate": {
  "year": 2020,
  "month": 12,
  "day": 25
},
  "userId": 97748,
  "description": "–ö–ª–∞—Å—Å–Ω–æ–µ —Ñ–æ—Ç–æ!",
  "likesQuantity": 753
}

  –í–∫–ª—é—á–∞—Ç—å prettyPrinting —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –≤ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–∏–ª–∏ –ø—Ä–∏ —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç API ‚Äî –∫–æ–≥–¥–∞ –≤–∞–∂–Ω–∞ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö.

- serializeNulls

  –ï—Å–ª–∏ —É Java-–æ–±—ä–µ–∫—Ç–∞ –∫–∞–∫–æ–µ-–ª–∏–±–æ –ø–æ–ª–µ —Ä–∞–≤–Ω–æ null, —Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–∞–∫–∏–µ –ø–æ–ª—è –Ω–µ –ø–æ–ø–∞–¥—É—Ç –≤ JSON.
–≠—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π serializeNulls (–æ—Ç –∞–Ω–≥–ª. ¬´—Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å null¬ª).

GsonBuilder gsonBuilder = new GsonBuilder();
gsonBuilder.serializeNulls();
Gson gson = gsonBuilder.create();

  –ö–∞–∫ –∏ –ø—Ä–µ–¥—ã–¥—É—â—É—é, —ç—Ç—É –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–±—ã—á–Ω–æ –æ—Å—Ç–∞–≤–ª—è—é—Ç –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–π, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø–æ —Å–µ—Ç–∏ –ª–∏—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ.
–ï—Å–ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ –º–Ω–æ–≥–æ –ø–æ–ª–µ–π –∏ –æ–Ω–∏ —á–∞—Å—Ç–æ –±—ã–≤–∞—é—Ç —Ä–∞–≤–Ω—ã null, —Ç–æ –≤—ã–∫–ª—é—á–µ–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É–±–µ—Ä—ë—Ç –∏–∑ JSON —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞ "–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø–æ–ª—è": null.
–í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —è–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å, —á—Ç–æ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ API –≤–µ—Ä–Ω—É—Ç –æ—à–∏–±–∫—É,
–µ—Å–ª–∏ –ø–æ–ª–µ –Ω–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –≤–æ–≤—Å–µ, –Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—é—Ç –≤–∞—Ä–∏–∞–Ω—Ç —Å null.


- registerTypeAdapter

  –í —Å–∞–º–æ–º –ø–µ—Ä–≤–æ–º –ø—Ä–∏–º–µ—Ä–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ LocalDateTime –±—ã–ª —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º.

"publicationDate": {
    "year": 2020,
    "month": 12,
    "day": 25
  }

  –≠—Ç–æ—Ç –∫–æ–¥ —É–¥–æ–±–Ω–æ —á–∏—Ç–∞—Ç—å, –Ω–æ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏–ª–∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–∞—Ç—É –≤ –¥—Ä—É–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–ª–∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–º–æ–∂–µ—Ç –º–µ—Ç–æ–¥ registerTypeAdapter(Type type, Object typeAdapter).
–û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å, –∞ —Ç–∞–∫–∂–µ typeAdapter (–æ—Ç –∞–Ω–≥–ª. ¬´–∞–¥–∞–ø—Ç–µ—Ä —Ç–∏–ø–∞¬ª) ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –µ–≥–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.
–ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ TypeAdapter,
–ø–µ—Ä–µ–¥–∞–≤ –µ–º—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–∂–µ–Ω–µ—Ä–∏–∫–∞ –∫–ª–∞—Å—Å, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
–ê –∑–∞—Ç–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Ç–æ–¥—ã write(...) –∏ read(...)

- write
  –ú–µ—Ç–æ–¥ write(...) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞. –ü–µ—Ä–≤—ã–π ‚Äî –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ JsonWriter.
–≠—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Gson, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –≤ —Å—Ç—Ä–æ–∫—É.
–í—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä ‚Äî —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Å—Ç—Ä–æ–∫—É.
–ú–µ—Ç–æ–¥ jsonWriter.value(...) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–æ—Ç —Ñ–æ—Ä–º–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –∏—Ç–æ–≥–æ–≤–æ–º JSON ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä,
boolean, double –∏–ª–∏, –∫–∞–∫ –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ, String. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä LocalDate –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é DateTimeFormatter.

import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

class LocalDateAdapter extends TypeAdapter<LocalDate> {
    // –∑–∞–¥–∞—ë–º —Ñ–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: "dd--MM--yyyy"
    private static final DateTimeFormatter formatterWriter = DateTimeFormatter.ofPattern("dd--MM--yyyy");

    @Override
    public void write(final JsonWriter jsonWriter, final LocalDate localDate) throws IOException {
        // –ø—Ä–∏–≤–æ–¥–∏–º localDate –∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
        jsonWriter.value(localDate.format(formatterWriter));
    }

    ...
}

- read
  –°—Ö–æ–∂–∏–º –æ–±—Ä–∞–∑–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ—Ç–æ–¥ read(...), –Ω–æ –≤ –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É.
–° –ø–æ–º–æ—â—å—é —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ JsonReader –æ–Ω —Å—á–∏—Ç—ã–≤–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.
–í –Ω–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ jsonReader.nextString()
–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—ë –≤ —ç–∫–∑–µ–º–ø–ª—è—Ä LocalDate —Å –ø–æ–º–æ—â—å—é DateTimeFormatter –∏ –º–µ—Ç–æ–¥–∞ LocalDate.parse(...)

import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

class LocalDateAdapter extends TypeAdapter<LocalDate> {
    private static final DateTimeFormatter formatterReader = DateTimeFormatter.ofPattern("dd.MM.yyyy");

    ...

    @Override
    public LocalDate read(final JsonReader jsonReader) throws IOException {
        return LocalDate.parse(jsonReader.nextString(), formatterReader);
    }
}

–í –∏—Ç–æ–≥–µ LocalDateAdapter –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫.

import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

class LocalDateAdapter extends TypeAdapter<LocalDate> {
    private static final DateTimeFormatter formatterWriter = DateTimeFormatter.ofPattern("dd--MM--yyyy");
    private static final DateTimeFormatter formatterReader = DateTimeFormatter.ofPattern("dd.MM.yyyy");

    @Override
    public void write(final JsonWriter jsonWriter, final LocalDate localDate) throws IOException {
        jsonWriter.value(localDate.format(formatterWriter));
    }

    @Override
    public LocalDate read(final JsonReader jsonReader) throws IOException {
        return LocalDate.parse(jsonReader.nextString(), formatterReader);
    }
}

–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π TypeAdapter —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ registerTypeAdapter.

GsonBuilder gsonBuilder = new GsonBuilder();
gsonBuilder.registerTypeAdapter(LocalDate.class, new LocalDateAdapter());
Gson gson = gsonBuilder.create();

üí° –ß–∞—Å—Ç–æ –¥–ª—è –±–∏–ª–¥–µ—Ä–æ–≤ –Ω–µ —Å–æ–∑–¥–∞—é—Ç –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∞ –ø—Ä–∏–º–µ–Ω—è—é—Ç –º–µ—Ç–æ–¥—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞.

Gson gson = new GsonBuilder()
        .registerTypeAdapter(LocalDate.class, new LocalDateAdapter())
        // –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã –±–∏–ª–¥–µ—Ä–∞
        .create();

–¢–∞–∫–æ–π —Å–ø–æ—Å–æ–± –≤—ã–≥–ª—è–¥–∏—Ç –Ω–µ–º–Ω–æ–≥–æ –ª–∞–∫–æ–Ω–∏—á–Ω–µ–µ.

–° –ø–æ–º–æ—â—å—é TypeAdapter –≤ –∫–æ–¥–µ –Ω–∏–∂–µ –æ–±—ä–µ–∫—Ç LocalDate –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ JSON –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd--MM--yyyy, –∞ –∏–∑ JSON ‚Äî –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy.
–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ —Ñ–æ—Ä–º–∞—Ç—ã –≤–≤–æ–¥–∞ –∏ –≤—ã–≤–æ–¥–∞!

--------------------------------------------------------------------------------------------------------------------------------------

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

class UserPostConverter {
    public static void main(String[] args) {
        UserPost post = new UserPost();
        post.setPhotoUrl("https://new-social-network.site/images/928476864.jpg");
        post.setUserId(97_748);
        post.setDescription("–ö–ª–∞—Å—Å–Ω–æ–µ —Ñ–æ—Ç–æ!");
        post.setLikesQuantity(753);
        LocalDate publicationDate = LocalDate.of(2020, 12, 25);
        post.setPublicationDate(publicationDate);

        Gson gson = new GsonBuilder()
                .setPrettyPrinting()
                .registerTypeAdapter(LocalDate.class, new LocalDateAdapter())
                .create();

				// —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –æ–±—ä–µ–∫—Ç –≤ JSON
        String postSerialized = gson.toJson(post);
        // –î–∞—Ç–∞ —Ç–µ–ø–µ—Ä—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ 25--12--2020
        System.out.println("Serialized post:\n" + postSerialized);

        // –∑–∞–º–µ–Ω–∏–º –¥–∞—Ç—É –≤ JSON –Ω–∞ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç
        String jsonWithAnotherDateFormat = postSerialized.replace("25--12--2020", "25.12.2020");

        System.out.println("New json:\n" + jsonWithAnotherDateFormat);

        // —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 25.12.2020 –≤ –æ–±—ä–µ–∫—Ç LocalDate
        UserPost postDeserialized = gson.fromJson(jsonWithAnotherDateFormat, UserPost.class);
        System.out.println("Deserialized post:\n" + postDeserialized);
    }
}

// –ø—Ä–∞–≤–∏–ª–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏, –æ–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ TypeAdapter –¥–ª—è –∫–ª–∞—Å—Å–∞ LocalDate
class LocalDateAdapter extends TypeAdapter<LocalDate> {
    private static final DateTimeFormatter formatterWriter = DateTimeFormatter.ofPattern("dd--MM--yyyy");
    private static final DateTimeFormatter formatterReader = DateTimeFormatter.ofPattern("dd.MM.yyyy");

    @Override
    public void write(final JsonWriter jsonWriter, final LocalDate localDate) throws IOException {
        jsonWriter.value(localDate.format(formatterWriter));
    }

    @Override
    public LocalDate read(final JsonReader jsonReader) throws IOException {
        return LocalDate.parse(jsonReader.nextString(), formatterReader);
    }
}


class UserPost {
    // URL-–∞–¥—Ä–µ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ
    private String photoUrl;

    // –¥–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    private LocalDate publicationDate;

    // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞
    private int userId;

    // —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ–æ—Ç–æ
    private String description;

    // —Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å—Ç–∞–≤–∏–ª–æ –ª–∞–π–∫ —ç—Ç–æ–º—É –ø–æ—Å—Ç—É
    private int likesQuantity;


    public String getPhotoUrl() {
        return photoUrl;
    }

    public void setPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
    }

    public LocalDate getPublicationDate() {
        return publicationDate;
    }

    public void setPublicationDate(LocalDate publicationDate) {
        this.publicationDate = publicationDate;
    }

    public int getUserId() {
        return userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public int getLikesQuantity() {
        return likesQuantity;
    }

    public void setLikesQuantity(int likesQuantity) {
        this.likesQuantity = likesQuantity;
    }


    @Override
    public String toString() {
        return "UserPost{" +
                "photoUrl='" + photoUrl + '\'' +
                ", publicationDate=" + publicationDate +
                ", userId=" + userId +
                ", description='" + description + '\'' +
                ", likesQuantity=" + likesQuantity +
                '}';
    }
}
